{"version":3,"file":"docks-angular.umd.js.map","sources":["ng://docks-angular/src/modules/docks/documentation-service.ts","ng://docks-angular/src/modules/docks/test-service.ts","ng://docks-angular/src/modules/docks/docks.component.ts","ng://docks-angular/src/modules/docks/sidebar.component.ts","ng://docks-angular/src/modules/docks/renderer.component.ts","ng://docks-angular/src/modules/docks/table-renderer.component.ts","ng://docks-angular/src/modules/docks/json-viewer.component.ts","ng://docks-angular/src/modules/docks/value-input.component.ts","ng://docks-angular/src/modules/docks/docks.module.ts"],"sourcesContent":["export class documentationService {\n    doc: any = {}\n    openedDoc = 'doc-active-dropdown'\n    DocsData: any = {}\n\n    states = {\n        props: false,\n        methods: false,\n        getters: false,\n        dataProps: false,\n        demo: false,\n        demoOverlay: false,\n        components: false,\n        tests: false,\n        view: '',\n        sidebarState: ``,\n        argToShow: ``\n    }\n\n    setDocs(DocsData: any) {\n        this.DocsData = DocsData\n    }\n\n    setDoc() {\n        this.doc = this.getThis(this.DocsData, this.openedDoc, {})\n        return this.doc\n    }\n\n    openDoc(doc: string) {\n        this.openedDoc = doc\n        this.states.view = `components`\n        this.setDoc()\n    }\n\n    getMarkup(doc: any) {\n        const props = []\n\n        for (const p in doc.props) {\n            if (doc.props[p]) {\n                props.push(`:${p}=\"doc.props.${p}.value\"`)\n            }\n        }\n\n        return `<${doc.name}${props.length ? `\\n  ` : ``}${props.join('\\n  ')}${props.length ? `\\n` : ``}></${doc.name}>`\n    }\n\n    json(obj: any) {\n        let result = ``\n\n        try {\n            result = JSON.stringify(obj, null, '    ')\n        } catch (error) { }\n\n        return result\n    }\n\n    docName(doc: any) {\n\n        if (!doc) {\n            return\n        }\n\n        return doc.name\n    }\n\n    /**\n     * @param el The starting object\n     * @param path String to follow\n     * @param emptyVal What is returned if undefined\n     * @desc Navigates an object or array to find a value\n     */\n    getThis(el: any, path: Array<any> | string, emptyVal?: any) {\n        if (path && path.toString().split) {\n            path = [el].concat(path.toString().split(`.`))\n        } else {\n            path = [el]\n        }\n\n        const result = path.reduce(function (accumulator, currentValue) {\n            if (accumulator === undefined) {\n                return emptyVal\n            }\n\n            if (currentValue.indexOf(`.`) === -1 && currentValue.indexOf(`(`) > -1) {\n                let argsString = ''\n\n                const argsObj = /\\((.*?)\\)/g.exec(currentValue)\n\n                if (argsObj) {\n                    argsString = argsObj[1] || ``\n                }\n\n                const args = argsString.split(`,`).map((arg) => arg.trim())\n                const functionName = currentValue.split(`(`)[0]\n\n                if (typeof accumulator[functionName] === `function`) {\n                    const _result = accumulator[functionName].apply(accumulator, args)\n                    return _result\n                }\n            }\n\n            if (currentValue) {\n                return accumulator[currentValue]\n            } else {\n                return accumulator\n            }\n\n        })\n\n        if (result === undefined) {\n            return emptyVal\n        }\n\n        return result\n    }\n\n    constructor() {\n        return this\n    }\n}\n\nexport let DocumentationService = new documentationService()\n","import { DocumentationService } from './documentation-service'\n\nexport class testService {\n    doc: any = {}\n    openedDoc = 'doc-active-dropdown'\n    testResults: any = {\n        testsAreRunning: false,\n        tests: {}\n    }\n\n    tests: any = {}\n    flatTests: any = {}\n    testTypes: any = {\n        class: [],\n        components: [],\n        modules: [],\n        'object literals': [],\n        interfaces: [],\n        variable: []\n    }\n    shownTestsState = ``\n\n    setTests(tests: any) {\n        this.tests = tests\n        this.testTypes.class = DocumentationService.getThis(this.tests, `class`, [])\n\n        const typesToTest = [\n            `methods`,\n            `properties`,\n            `attributeProperties`,\n            `getters`\n        ]\n\n        for (const type in DocumentationService.DocsData) {\n            if (DocumentationService.DocsData[type]) {\n\n                for (const docName in DocumentationService.DocsData[type]) {\n                    if (DocumentationService.DocsData[type][docName] && docName !== `DocumentationService` && docName !== `TestService`) {\n\n                        const serviceTest = DocumentationService.getThis(this.testTypes, `${type}.${docName}`, { tests: [] })\n                        const serviceTestTests: any = {}\n\n                        if (serviceTest.tests) {\n                            serviceTest.tests.forEach((test: any) => {\n                                let fors = test.for\n\n                                if (!fors) {\n                                    fors = test.name\n                                }\n\n                                if (fors && Array.isArray(fors)) {\n                                    fors.forEach(_for => {\n                                        if (!serviceTestTests[_for]) {\n                                            serviceTestTests[_for] = [test]\n                                            return\n                                        }\n\n                                        serviceTestTests[_for].push(test)\n                                    })\n                                } else {\n                                    if (!serviceTestTests[fors]) {\n                                        serviceTestTests[fors] = [test]\n                                        return\n                                    }\n                                    serviceTestTests[fors].push(test)\n                                }\n                            })\n                        }\n\n                        if (DocumentationService.DocsData[type][docName].children) {\n                            const children = DocumentationService.DocsData[type][docName].children\n                            for (const childName in children) {\n                                if (children[childName]) {\n                                    if (!!children[childName] && typesToTest.indexOf(childName) > -1) {\n\n                                        for (const propName in children[childName]) {\n                                            if (children[childName][propName] && typeof children[childName][propName] === `object`) {\n                                                const testCases = serviceTestTests[propName]\n                                                const canMap = !!testCases\n                                                children[childName][propName].tests = serviceTestTests[propName]\n                                                children[childName][propName].testCases = canMap ? testCases.map((test: any) => {\n                                                    let asserts = test.name\n\n                                                    if (test.asserts && test.asserts.map) {\n                                                        asserts = test.asserts.map((assert: any) => assert.name)\n                                                    }\n\n                                                    return {\n                                                        name: test.name,\n                                                        asserts\n                                                    }\n                                                }) : []\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    hasTestRan(doc: string, testName: string) {\n\n        if (!doc) {\n            return false\n        }\n\n        return DocumentationService.getThis(this.testResults.tests, `${doc}.results.${testName}`)\n    }\n\n    hasTestPassed(doc: string, testName: string) {\n\n        if (!doc) {\n            return undefined\n        }\n\n        return DocumentationService.getThis(this.testResults.tests, `${doc}.results.${testName}.pass`)\n    }\n\n    getTestAssertResult(doc: string, testName: string, index: number) {\n        if (!doc) {\n            return undefined\n        }\n\n        return DocumentationService.getThis(this.testResults.tests, `${doc}.results.${testName}.results.${index}`)\n    }\n\n    hasTestAsserts(doc: string, testIndex: number) {\n\n        if (!doc) {\n            return undefined\n        }\n\n        const asserts: Array<any> = DocumentationService.getThis(this.tests, `${doc}.tests.${testIndex}.asserts`)\n        const assertKeys: Array<string> = []\n\n        if (asserts) {\n            asserts.forEach(element => {\n                if (element.name) {\n                    assertKeys.push(element.name)\n                } else {\n                    assertKeys.push(element)\n                }\n            })\n        }\n\n        return assertKeys\n    }\n\n    isTestRunning(doc: string, testName?: string) {\n\n        if (!doc) {\n            return undefined\n        }\n\n        if (!testName) {\n            return DocumentationService.getThis(this.testResults.tests, `${doc}.running`)\n        }\n\n        return DocumentationService.getThis(this.testResults.tests, `${doc}.results.${testName}.running`)\n    }\n\n    getTests(doc: string) {\n\n        if (!doc) {\n            return false\n        }\n\n        return this.tests[doc] || undefined\n    }\n\n    runAsserts(test: any) {\n        return new Promise((resolve, reject) => {\n            test.results = []\n\n            const runAssert = (index: number) => {\n                if (!test.asserts[index]) {\n                    return resolve(test.results)\n                }\n\n                let key: any = test.asserts[index]\n                let fn: Function = () => { }\n                let pre: Function | null = null\n                let val: any\n\n                if (typeof key === `string`) {\n                    fn = test.methods[key]\n                } else if (typeof test.asserts[index] === `object`) {\n                    key = test.asserts[index].name\n                    fn = test.asserts[index].fn\n                    pre = test.asserts[index].pre || pre\n                }\n\n                const setResult = () => {\n                    if (val instanceof Promise) {\n                        val\n                            .then(res => {\n                                test.results.push({ pass: true, message: res, key })\n                                runAssert(index + 1)\n                            })\n                            .catch(res => {\n                                test.results.push({ pass: false, message: res, key })\n                                runAssert(index + 1)\n                            })\n                    } else {\n                        test.results.push({ pass: !!val, message: val, key })\n                        runAssert(index + 1)\n                    }\n                }\n\n                if (!pre) {\n                    val = fn()\n                    setResult()\n                } else {\n                    pre()\n                        .then(() => {\n                            val = fn()\n                            setResult()\n                        })\n                        .catch(() => {\n                            val = fn()\n                            setResult()\n                        })\n                }\n            }\n\n            runAssert(0)\n        })\n    }\n\n    runTest(test: any, groupKey: string, type: string) {\n        const now = new Date().getTime()\n\n        return new Promise((resolve, reject) => {\n            this.testResults.testsAreRunning = true\n\n            if (!this.testResults.tests[type]) {\n                this.testResults.tests[type] = {}\n            }\n\n            if (!this.testResults.tests[type][groupKey]) {\n                this.testResults.tests[type][groupKey] = {\n                    pass: 0,\n                    results: {},\n                    running: true\n                }\n            }\n\n            this.testResults.tests[type][groupKey].running = true\n\n            const setResults = (res: any) => {\n                this.testResults.tests[type][groupKey].running = false\n                this.testResults.tests[type][groupKey].results[test.name] = res\n                this.testResults.testsAreRunning = false\n\n                if (res.pass) {\n                    return resolve(res)\n                }\n\n                return reject(res)\n            }\n\n            const finishAssert = (res: any) => {\n                let passed = true\n\n                res.forEach((element: any) => {\n                    if (!element.pass) {\n                        passed = false\n                    }\n                })\n\n                setResults({\n                    pass: passed,\n                    message: ``,\n                    time: new Date().getTime() - now,\n                    running: false,\n                    results: res\n                })\n            }\n\n            this.testResults.tests[type][groupKey].results[test.name] = {\n                pass: undefined,\n                message: ``,\n                time: 0,\n                running: true\n            }\n\n            if (test.asserts && test.asserts.length) {\n\n                this.runAsserts(test).then(finishAssert, finishAssert)\n\n            } else if (test.fn && typeof test.fn === `function`) {\n                test.fn()\n                    .then((res: any) => {\n                        setResults({\n                            pass: true,\n                            message: ``,\n                            time: new Date().getTime() - now,\n                            running: false,\n                            results: res\n                        })\n                    }, (rej: any) => {\n                        setResults({\n                            pass: false,\n                            message: rej,\n                            time: new Date().getTime() - now,\n                            running: false,\n                            results: rej\n                        })\n                    })\n            }\n        })\n\n    }\n\n    runTestGroup(group: any, type: string) {\n\n        return new Promise((resolve, reject) => {\n\n            this.testResults.tests[group.name] = {\n                pass: undefined,\n                results: {}\n            }\n\n            const setResults = (res: any, index: number) => {\n                const cantUpdatePass = this.testResults.tests[group.name].pass === false\n                const newPass = cantUpdatePass ? this.testResults.tests[group.name].pass : res.pass\n\n                this.testResults.tests[group.name].pass = newPass\n                this.testResults.tests[group.name].results[group.tests[index].name] = res\n\n                run(index + 1)\n            }\n\n            const run = (index: number) => {\n                if (group.tests[index]) {\n                    this.runTest(group.tests[index], group.name, type)\n                        .then((res: any) => {\n                            setResults(res, index)\n                        })\n                        .catch((res: any) => {\n                            setResults(res, index)\n                        })\n\n                } else {\n                    resolve(this.testResults.tests[group.name])\n                }\n            }\n\n            run(0)\n        })\n\n    }\n\n    /**\n     * @desc Runs all tests\n     * @param test - testing param description\n     */\n    runTests(test?: { id: string }) {\n\n        return new Promise((resolve, reject) => {\n\n            const run = (index: number) => {\n                const type = Object.keys(this.tests)[index]\n                const thisTestGroup = this.tests[type]\n\n                if (thisTestGroup) {\n                    const runGroup = (groupIndex: number) => {\n                        const thisTest = thisTestGroup[Object.keys(thisTestGroup)[groupIndex]]\n\n                        if (thisTest) {\n                            this.runTestGroup(thisTest, type)\n                                .then((res: any) => {\n                                    this.testResults.tests[type][thisTest.name] = res\n                                    runGroup(groupIndex + 1)\n                                }, (rej: any) => {\n                                    this.testResults.tests[type][thisTest.name] = rej\n                                    runGroup(groupIndex + 1)\n                                })\n                        } else {\n                            run(index + 1)\n                        }\n                    }\n\n                    runGroup(0)\n                } else {\n                    resolve(this.testResults.tests)\n                }\n            }\n\n            run(0)\n        })\n    }\n\n    getFormatedTime(timestamp: number) {\n        if (timestamp < 1000) {\n            return timestamp + `ms`\n        }\n\n        if (timestamp < 1000 * 60) {\n            return (timestamp / 1000) + `s`\n        }\n\n        if (timestamp < 1000 * 60 * 60) {\n            return (timestamp / 1000 * 60) + `m`\n        }\n\n        return ``\n    }\n}\n\nexport let TestService = new testService()\n","import { Component, Input, OnInit } from '@angular/core';\nimport { DocumentationService } from './documentation-service'\nimport { TestService } from './test-service'\n\n@Component({\n    selector: 'app-docks',\n    template: `<div id=\"documentation-overlay\">\n  <app-sidebar></app-sidebar>\n  <div class=\"doc-viewer\" [ngClass]=\"service.openedDoc\">\n    <div class=\"doc-container\">\n      <app-renderer></app-renderer>\n    </div>\n  </div>\n</div>`,\n    styles: [`@-webkit-keyframes rotating{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes rotating{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes fading{0%,100%{opacity:.3}50%{opacity:.8}}@keyframes fading{0%,100%{opacity:.3}50%{opacity:.8}}#documentation-overlay{position:fixed;top:0;left:0;height:100%;width:100%;z-index:9999999;background:#fff;overflow:hidden;display:flex;font-family:sans-serif}#documentation-overlay .red-flag{color:#d10005}#documentation-overlay #docs-close-button{position:fixed;top:7px;right:7px;color:#fff;background:#f3aa00;padding:7px;text-transform:uppercase;border-radius:50%;font-weight:700;width:32px;height:32px;display:flex;align-items:center;justify-content:center;font-size:15px;line-height:15px;cursor:pointer}#documentation-overlay button.disabled{opacity:.5;pointer-events:none}#documentation-overlay button{font-size:12px;border:none;padding:7px;outline:0!important}#documentation-overlay .test-asserts{font-size:12px}#documentation-overlay .test-asserts .test-assert{padding:7px 7px 7px 47px;background:rgba(35,71,100,.04)}#documentation-overlay .test-asserts .test-assert:nth-child(even){background:rgba(35,71,100,.09)}#documentation-overlay button.spin-if-running{transition:opacity .5s;margin-right:7px}#documentation-overlay button.spin-if-running.running{opacity:.5;pointer-events:none;-webkit-animation:2s linear infinite fading;animation:2s linear infinite fading}#documentation-overlay .spin-if-running.running>span{transition:transform .2s;transition:transform .2s,-webkit-transform .2s;-webkit-animation:2s linear infinite rotating;animation:2s linear infinite rotating}#documentation-overlay .spin-if-running>span{display:inline-block}#documentation-overlay button.spin-if-running>span{width:16px;height:16px}#documentation-overlay button.spin-if-running>span span{position:relative;left:1px;top:0;transition:left .2s}#documentation-overlay button.spin-if-running.running>span span{left:1px}#documentation-overlay .doc-viewer{height:100%;padding:14px;overflow:auto;width:100%;color:#234764}#documentation-overlay .doc-viewer li{list-style:none}#documentation-overlay .doc-viewer button{background:#f3aa00;color:#fff;cursor:pointer}#documentation-overlay .doc-viewer .doc-element p{margin:7px 0}#documentation-overlay .doc-viewer .doc-element p.description,#documentation-overlay .doc-viewer .doc-element p.subtitle{margin-bottom:21px}#documentation-overlay .doc-viewer .doc-element h2{margin:14px 0}#documentation-overlay .doc-viewer .doc-element section{margin:0 0 28px}#documentation-overlay .doc-viewer .doc-element input,#documentation-overlay .doc-viewer .doc-element select,#documentation-overlay .doc-viewer .doc-element textarea{background:#fff;border:none;height:32px;width:100%;max-width:210px;border-radius:1px;outline:0!important;-webkit-appearance:none;-moz-appearance:none;appearance:none;padding:10px;color:#234664;box-shadow:0 1px 1px rgba(0,0,0,.22);box-sizing:border-box}#documentation-overlay .doc-viewer .doc-element textarea{height:100px;resize:none}#documentation-overlay .doc-viewer a .example-code{width:100%;overflow:auto;padding:7px;background:#a18f74;color:#fff;font-size:12px;margin-bottom:21px}#documentation-overlay .doc-viewer .example-code pre{margin:0}#documentation-overlay .doc-viewer .h1{font-size:28px;font-weight:700;margin:21px 0}#documentation-overlay .doc-viewer .h2{font-size:18px;margin:14px 0 0;background:#234764;color:#fff;padding:10px;cursor:pointer}#documentation-overlay .doc-viewer .h2:before{content:\"\";border:7px solid transparent;border-left-color:#fff;width:0;height:0;display:inline-block}#documentation-overlay .doc-viewer .h2.active:before{border-left-color:transparent;border-top-color:#fff;position:relative;top:4px;left:-3px}#documentation-overlay .doc-viewer .h3{font-size:14px;margin:17px 0;font-weight:700}#documentation-overlay .doc-viewer .subtitle{font-size:14px;font-weight:100;vertical-align:baseline;margin-left:7px}#documentation-overlay .doc-viewer #demo-overlay{width:90%;height:90%}#documentation-overlay .doc-viewer pre.demo{font-size:12px;padding:7px;background:rgba(9,54,84,.1);overflow:auto}#documentation-overlay .doc-viewer #demo-overlay-container{position:fixed;width:100%;height:100%;top:0;left:0;background:#0b1116de;display:flex;justify-content:center;align-items:center;z-index:999999999;color:#fff;overflow:auto}#documentation-overlay .doc-viewer #demo-overlay-close{position:fixed;top:14px;right:14px;font-size:14px;font-weight:700;background:rgba(255,255,255,.23);padding:7px;width:24px;height:24px;display:flex;justify-content:center;align-items:center;text-transform:uppercase;border-radius:50%;cursor:pointer}#documentation-overlay .doc-viewer .flex-vcenter{display:flex;align-items:center}#documentation-overlay .doc-viewer .test-group-header .h3{margin:0}.noTest{background:#a10005;color:#fff;padding:3px}.noTest *,.noTest .json-formatter-row,.noTest .json-formatter-row a,.noTest .json-formatter-row a:hover{color:#fff}.red-flag{color:#a10005}`]\n})\nexport class DocksComponent implements OnInit {\n\n    service: any = DocumentationService\n    testService: any = TestService\n\n    @Input('docs')\n    docs: any\n\n    @Input('initial')\n    initial: string\n\n    @Input('tests')\n    tests: any\n\n    @Input('componentClasses')\n    componentClasses: any\n\n    launch(doc: any) {\n    }\n\n    ngOnInit() {\n        this.service.setDocs(this.docs)\n        this.testService.setTests(this.tests)\n\n        if (this.initial && this.initial !== ``) {\n            this.service.openDoc(this.initial)\n            this.service.states.sidebarState = this.initial.split(`.`)[0]\n        }\n    }\n\n}\n","import { Component } from '@angular/core';\nimport { DocumentationService } from './documentation-service'\nimport { TestService } from './test-service'\n\n@Component({\n    selector: 'app-sidebar',\n    template: `<div class=\"doc-sidebar\">\n    <div *ngFor=\"let typeName of typeNames; let typeIndex = index\">\n        <div class=\"sidebar-heading group\" [ngClass]=\"{active: service.states.sidebarState === typeName}\" (click)=\"setSidebarState(typeName)\">{{typeName}}</div>\n        <div [ngClass]=\"{shown: service.states.sidebarState === typeName}\" class=\"link-group\">\n            <div class=\"doc-sidebar-link\" *ngFor=\"let docLinkName of linkNames[typeIndex]\" (click)=\"service.openDoc(getLink(docLinkName, typeName))\">\n                <span *ngIf=\"isDocumented(docLinkName, typeName)\" class=\"red-flag\"></span>\n                <span>{{getDocLink(docLinkName, typeName).name}}</span>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"testService.tests\">\n        <div class=\"sidebar-heading\" (click)=\"service.states.view = 'tests'\">Tests</div>\n    </div>\n</div>`,\n    styles: [`.doc-sidebar{height:100%;background:#224764;color:#f0f4f8;white-space:nowrap;overflow:auto}.doc-sidebar .sidebar-heading{font-size:12px;font-weight:700;background:rgba(0,0,0,.21);padding:10px;box-shadow:0 -1px 0 rgba(0,0,0,.13);cursor:pointer;text-transform:uppercase}.doc-sidebar .sidebar-heading.group::before{content:\"\";border:5px solid transparent;border-left-color:#fff;width:0;height:0;display:inline-block}.doc-sidebar .sidebar-heading.group.active::before{border-left-color:transparent;border-top-color:#fff;position:relative;top:3px;left:-2px}.doc-sidebar .link-group{height:0;opacity:0;pointer-events:none;overflow:hidden}.doc-sidebar .link-group.shown{height:auto;opacity:1;pointer-events:all;overflow:auto}.doc-sidebar .doc-sidebar-link{padding:10px;box-shadow:0 -1px 0 rgba(76,112,141,.34),0 -2px 0 rgba(4,34,57,.25);cursor:pointer;font-size:12px}.doc-sidebar .doc-sidebar-link .red-flag{border:3px solid #a10005;border-radius:50%;display:inline-block;vertical-align:middle}`]\n})\nexport class SidebarComponent {\n\n    constructor() { }\n\n    service: any = DocumentationService\n    testService: any = TestService\n\n    get typeNames(): string[] {\n        return Object.keys(this.service.DocsData)\n    }\n\n    get linkNames(): Array<string[]> {\n        const map = this.typeNames.map(typeName => Object.keys(this.service.DocsData[typeName]))\n        return map\n    }\n\n    getLink(docLinkName: string, typeName: string): string {\n        return `${typeName.toLowerCase()}.${docLinkName}`\n    }\n\n    isDocumented(docLinkName: string, typeName: string): boolean {\n        const docLink = this.getDocLink(docLinkName, typeName)\n        return docLink.hasOwnProperty('isDocumented') && !docLink.isDocumented\n    }\n\n    getDocLink(docLinkName: string, typeName: string) {\n        return this.service.getThis(this.service.DocsData, this.getLink(docLinkName, typeName), {})\n    }\n\n    setSidebarState(state: string) {\n        if (this.service.states.sidebarState === state) {\n            this.service.states.sidebarState = ``\n            return\n        }\n\n        this.service.states.sidebarState = state\n    }\n}\n","import { Component } from '@angular/core';\nimport { DocumentationService } from './documentation-service'\nimport { TestService } from './test-service'\n\n@Component({\n    selector: 'app-renderer',\n    template: `<article class=\"doc-element\" *ngIf=\"service.states.view === 'components' && service.doc.name\">\n    <div class=\"h1 title\">{{ service.doc.name }}\n        <span class=\"subtitle\" *ngIf=\"service.doc.description\">{{ service.doc.description }}</span>\n    </div>\n    <section *ngIf=\"service.doc.body\">\n        <div [innerHTML]=\"service.doc.body\"></div>\n    </section>\n    <section *ngIf=\"service.doc.group === 'components'\">\n        <div class=\"h2\" (click)=\"service.states.demo = !service.states.demo\" [ngClass]=\"service.states.demo ? 'active' : ''\">Demo</div>\n        <div *ngIf=\"service.states.demo\">\n            <div>\n                <pre class=\"demo\"><code>{{service.getMarkup(service.doc)}}</code></pre>\n            </div>\n            <div>\n                <!-- <button (click)=\"launch(service.doc)\">Launch demo</button> -->\n            </div>\n            <div id=\"demo-overlay-container\" *ngIf=\"service.states.demoOverlay\">\n                <div id=\"demo-overlay-close\" (click)=\"service.states.demoOverlay = false\">x</div>\n                <div id=\"demo-overlay\"></div>\n            </div>\n        </div>\n    </section>\n\n    <section *ngIf=\"hasProperties('attributeProperties')\">\n        <div class=\"h2\" (click)=\"service.states.props = !service.states.props\" [ngClass]=\"service.states.props ? 'active' : ''\">Attribute properties</div>\n        <app-table-renderer [show]=\"service.states.props\" [properties]=\"attributeProps\"></app-table-renderer>\n    </section>\n\n    <section *ngIf=\"hasProperties('properties')\">\n        <div class=\"h2\" (click)=\"service.states.dataProps = !service.states.dataProps\" [ngClass]=\"service.states.dataProps ? 'active' : ''\">Properties</div>\n        <app-table-renderer [show]=\"service.states.dataProps\" [properties]=\"properties\"></app-table-renderer>\n    </section>\n\n    <section *ngIf=\"hasProperties('getters')\">\n        <div class=\"h2\" (click)=\"service.states.getters = !service.states.getters\" [ngClass]=\"service.states.getters ? 'active' : ''\">Getters</div>\n        <app-table-renderer [show]=\"service.states.getters\" [properties]=\"gettersProps\"></app-table-renderer>\n    </section>\n\n    <section *ngIf=\"hasProperties('methods')\">\n        <div class=\"h2\" (click)=\"service.states.methods = !service.states.methods\" [ngClass]=\"service.states.methods ? 'active' : ''\">Methods</div>\n        <app-table-renderer [show]=\"service.states.methods\" [properties]=\"methods\"></app-table-renderer>\n    </section>\n</article>`,\n    styles: [`@-webkit-keyframes rotating{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes rotating{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes fading{0%,100%{opacity:.3}50%{opacity:.8}}@keyframes fading{0%,100%{opacity:.3}50%{opacity:.8}}.red-flag{color:#d10005}#docs-close-button{position:fixed;top:7px;right:7px;color:#fff;background:#f3aa00;padding:7px;text-transform:uppercase;border-radius:50%;font-weight:700;width:32px;height:32px;display:flex;align-items:center;justify-content:center;font-size:15px;line-height:15px;cursor:pointer}button.disabled{opacity:.5;pointer-events:none}button{font-size:12px;border:none;padding:7px;outline:0!important;background:#f3aa00;color:#fff;cursor:pointer}.test-asserts{font-size:12px}.test-asserts .test-assert{padding:7px 7px 7px 47px;background:rgba(35,71,100,.04)}.test-asserts .test-assert:nth-child(even){background:rgba(35,71,100,.09)}button.spin-if-running{transition:opacity .5s;margin-right:7px}button.spin-if-running.running{opacity:.5;pointer-events:none;-webkit-animation:2s linear infinite fading;animation:2s linear infinite fading}.spin-if-running.running>span{transition:transform .2s;transition:transform .2s,-webkit-transform .2s;-webkit-animation:2s linear infinite rotating;animation:2s linear infinite rotating}.spin-if-running>span{display:inline-block}button.spin-if-running>span{width:16px;height:16px}button.spin-if-running>span span{position:relative;left:1px;top:0;transition:left .2s}button.spin-if-running.running>span span{left:1px}.doc-viewer{height:100%;padding:14px;overflow:auto;width:100%;color:#234764}li{list-style:none}.doc-element p{margin:7px 0}.doc-element p.description,.doc-element p.subtitle{margin-bottom:21px}.doc-element h2{margin:14px 0}.doc-element section{margin:0 0 28px}.doc-element input,.doc-element select,.doc-element textarea{background:#fff;border:none;height:32px;width:100%;max-width:210px;border-radius:1px;outline:0!important;-webkit-appearance:none;-moz-appearance:none;appearance:none;padding:10px;color:#234664;box-shadow:0 1px 1px rgba(0,0,0,.22);box-sizing:border-box}.doc-element textarea{height:100px;resize:none}a .example-code{width:100%;overflow:auto;padding:7px;background:#a18f74;color:#fff;font-size:12px;margin-bottom:21px}.example-code pre{margin:0}.h1{font-size:28px;font-weight:700;margin:21px 0}.h2{font-size:18px;margin:14px 0 0;background:#234764;color:#fff;padding:10px;cursor:pointer}.h2:before{content:\"\";border:7px solid transparent;border-left-color:#fff;width:0;height:0;display:inline-block}.h2.active:before{border-left-color:transparent;border-top-color:#fff;position:relative;top:4px;left:-3px}.h3{font-size:14px;margin:17px 0;font-weight:700}.subtitle{font-size:14px;font-weight:100;vertical-align:baseline;margin-left:7px}#demo-overlay{width:90%;height:90%}pre.demo{font-size:12px;padding:7px;background:rgba(9,54,84,.1);overflow:auto}#demo-overlay-container{position:fixed;width:100%;height:100%;top:0;left:0;background:#0b1116de;display:flex;justify-content:center;align-items:center;z-index:999999999;color:#fff;overflow:auto}#demo-overlay-close{position:fixed;top:14px;right:14px;font-size:14px;font-weight:700;background:rgba(255,255,255,.23);padding:7px;width:24px;height:24px;display:flex;justify-content:center;align-items:center;text-transform:uppercase;border-radius:50%;cursor:pointer}.flex-vcenter{display:flex;align-items:center}.test-group-header .h3{margin:0}`]\n})\nexport class RendererComponent {\n\n    constructor() { }\n\n    service: any = DocumentationService\n    testService: any = TestService\n\n    get properties() {\n        return {\n            data: this.service.doc.children.properties,\n            columns: [{\n                key: 'name',\n                label: 'name'\n            }, {\n                key: 'type',\n                label: 'type',\n                required: true\n            }, {\n                key: 'description',\n                label: 'description',\n                required: true\n            }, {\n                key: 'testCases',\n                label: 'test cases'\n            }]\n        }\n    }\n\n    get methods() {\n        return {\n            data: this.service.doc.children.methods,\n            columns: [{\n                key: 'name',\n                label: 'name'\n            }, {\n                key: 'description',\n                label: 'description',\n                required: true\n            }, {\n                key: 'arguments',\n                label: 'arguments'\n            }, {\n                label: 'returns',\n                key: 'returns'\n            }, {\n                key: 'testCases',\n                label: 'test cases'\n            }]\n        }\n    }\n\n    get attributeProps() {\n        return {\n            data: this.service.doc.children.attributeProperties,\n            columns: [{\n                key: 'name',\n                label: 'name'\n            }, {\n                key: 'type',\n                label: 'type',\n                required: true\n            }, {\n                key: 'description',\n                label: 'description',\n                required: true\n            }, {\n                key: 'testCases',\n                label: 'test cases'\n                // }, {\n                //     key: 'value',\n                //     label: 'value'\n            }]\n        }\n    }\n\n    get gettersProps() {\n        return {\n            data: this.service.doc.children.getters,\n            columns: [{\n                key: 'name',\n                label: 'name'\n            }, {\n                key: 'description',\n                label: 'description',\n                required: true\n            }, {\n                key: 'returns',\n                label: 'returns'\n            }, {\n                key: 'testCases',\n                label: 'test cases'\n            }]\n        }\n    }\n\n    hasProperties(type: string) {\n        const children = this.service.doc.children\n        return children && children[type] && Object.keys(children[type]).length\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { DocumentationService } from './documentation-service'\nimport { TestService } from './test-service'\n\n@Component({\n    selector: 'app-table-renderer',\n    template: `<table *ngIf=\"show\" class=\"documentation-table\">\n    <thead>\n        <tr>\n            <th *ngFor=\"let column of properties.columns; let key = index\">{{column.label}}</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let row of propertiesDataKeys; let rowIndex = index\">\n            <td *ngFor=\"let column of properties.columns; let key = index\" [ngClass]=\"column.label\">\n                <!-- <div v-if=\"column.key === 'value' && properties.data[row]\">\n                    <app-value-input [model]=\"properties.data[row]\"></app-value-input>\n                </div> -->\n                <div *ngIf=\"showText(column.key)\">\n                    <app-json-viewer *ngIf=\"showJsonViewer(properties.data[row][column.key])\" [json]=\"properties.data[row][column.key]\"></app-json-viewer>\n                    <div *ngIf=\"isString(properties.data[row][column.key])\" [innerHTML]=\"properties.data[row][column.key]\"></div>\n                </div>\n                <div *ngIf=\"hasArguments(row, column.key)\">\n                    <div *ngFor=\"let argument of properties.data[row][column.key]\" class=\"argument-container\">\n                        <div class=\"argument-name\">\n                            <b>{{argument.name}}</b>\n                            <span *ngIf=\"argument.isOptional\">: (optional)</span>\n                            <span class=\"argument-body\" *ngIf=\"argument.description\"> - {{argument.description}}</span>\n                        </div>\n                        <div class=\"argument-body red-flag\" *ngIf=\"!argument.description\">missing description</div>\n                        <div class=\"argument-object\" *ngIf=\"argument.type\">\n                            <app-json-viewer *ngIf=\"showJsonViewer(argument.type)\" [json]=\"argument.type\"></app-json-viewer>\n                        </div>\n                    </div>\n                </div>\n                <div *ngIf=\"column.key === 'testCases'\" [ngClass]=\"{noTest: !hasTest(row, column.key)}\">\n                    <app-json-viewer *ngIf=\"showJsonViewer(properties.data[row][column.key])\" [json]=\"properties.data[row][column.key]\"></app-json-viewer>\n                </div>\n            </td>\n        </tr>\n    </tbody>\n</table>`,\n    styles: [`.documentation-table{width:100%;text-align:left;border-collapse:collapse}.documentation-table td,.documentation-table th{vertical-align:top;padding:14px;font-size:12px}.documentation-table th{background:#a18f74;color:#fff;text-transform:uppercase}.documentation-table td{background:rgba(9,54,84,.05)}.documentation-table td .red-flag{font-family:monospace}.documentation-table td:nth-child(1){font-weight:700}.documentation-table td.type{text-transform:lowercase}.documentation-table tbody tr:nth-child(even)>td{background:rgba(9,54,84,.1)}.documentation-table td td,.documentation-table td th{padding:7px}.documentation-table td pre{font-family:sans-serif;font-size:12px;line-height:18px;background:rgba(255,255,255,.61);padding:7px;margin:0}.documentation-table .argument-container{margin:0 0 14px}.documentation-table .argument-container .argument-name{background:rgba(35,70,100,.15);padding:7px}.documentation-table .argument-container .argument-object{padding:5px 7px;background:rgba(255,255,255,.85)}.documentation-table .argument-container:last-child{margin:0}.documentation-table .noTest{background:#a10005;color:#fff;padding:3px}.documentation-table .noTest *,.documentation-table .noTest .json-formatter-row,.documentation-table .noTest .json-formatter-row a,.documentation-table .noTest .json-formatter-row a:hover{color:#fff}`]\n})\nexport class TableRendererComponent {\n\n    constructor() { }\n\n    service: any = DocumentationService\n    testService: any = TestService\n\n    @Input('show')\n    show: boolean\n\n    @Input('properties')\n    properties: any\n\n    get propertiesDataKeys() {\n        return Object.keys(this.properties.data)\n    }\n\n    getLink(docLinkName: string, typeName: string): string {\n        return `${typeName.toLowerCase()}.${docLinkName}`\n    }\n\n    getDocData(docLinkName: string, typeName: string) {\n        return this.service.getThis(this.service.DocsData, this.getLink(docLinkName, typeName), {})\n    }\n\n    showJsonViewer(val: any): boolean {\n        return !!val && typeof val !== `string`\n    }\n\n    showText(key: string): boolean {\n        return key !== 'value' && key !== 'arguments' && key !== 'testCases'\n    }\n\n    isString(val: any): boolean {\n        return !!val && typeof val === `string`\n    }\n\n    hasTest(row, key) {\n        return this.service.getThis(this.properties.data, `${row}.${key}`) && this.service.getThis(this.properties.data, `${row}.${key}`, []).length\n    }\n\n    hasArguments(row, key) {\n        if (key !== `arguments`) {\n            return false\n        }\n\n        const val = this.service.getThis(this.properties.data, `${row}.${key}`)\n        const length = (Array.isArray(val) ? val : []).length\n\n        if (!length) {\n            return false\n        }\n\n        let pass = true\n\n        val.forEach(element => {\n            console.log(element)\n            if (!element.hasOwnProperty || !element.hasOwnProperty(`name`)) {\n                pass = false\n            }\n        });\n\n        return pass\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport JSONFormatter from 'json-formatter-js'\n\n@Component({\n    selector: 'app-json-viewer',\n    template: `<div [innerHTML]=\"html\"></div>`,\n    styles: [`.json-formatter-row .json-formatter-row,.json-formatter-row a{white-space:nowrap}`]\n})\n\nexport class JsonViewerComponent {\n\n    @Input('json')\n    json: any\n\n    get html(): string {\n        const formatter = new JSONFormatter(this.json, 0, {\n            hoverPreviewEnabled: false,\n            hoverPreviewArrayCount: 100,\n            hoverPreviewFieldCount: 5,\n        });\n\n        return formatter.render().outerHTML\n    }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-value-input',\n    template: `<div class=\"value-input\">\n    <textarea *ngIf=\"showTextarea()\" [(ngModel)]=\"proxyModel\" (input)=\"updateVal\"></textarea>\n    <!-- <input type=\"number\" *ngIf=\"type === 'number'\" [(ngModel)]=\"proxyModel\" (input)=\"updateVal\">\n    <input type=\"text\" *ngIf=\"type === 'string'\" [(ngModel)]=\"proxyModel\" (input)=\"updateVal\">\n    <input type=\"checkbox\" *ngIf=\"type === 'boolean'\" [(ngModel)]=\"proxyModel\" (input)=\"updateVal\"> -->\n</div>`,\n    styles: [``]\n})\n\nexport class ViewerInputComponent implements OnInit {\n\n    @Input('model')\n    model: any\n\n    proxyModel = ``\n\n    type: string = `string`\n\n    getProxyModel() {\n        switch (this.type) {\n            case `string`:\n                return this.model.value ? this.model.value.toString() : ``\n            case `number`:\n                return this.model.value ? parseFloat(this.model.value) : 0\n            case `boolean`:\n                return this.model.value\n\n            default:\n                let val = this.model.value\n\n                try {\n                    val = JSON.stringify(this.model.value)\n                } catch (error) { }\n\n                return val || `{}`\n        }\n    }\n\n    updateVal() {\n        let value = this.proxyModel\n\n        switch (this.type) {\n            case `string`:\n                this.model.value = value ? value.toString() : ``\n                break\n            case `number`:\n                this.model.value = value ? parseFloat(value) : 0\n                break\n            case `boolean`:\n                this.model.value = !!value\n                break\n\n            default:\n                try {\n                    value = JSON.parse(value)\n                } catch (error) { }\n\n                this.model.value = value || {}\n        }\n    }\n\n    ngOnInit() {\n        console.log(this.type, this.model);\n\n        this.proxyModel = this.getProxyModel()\n        this.type = this.model ? this.model.type || this.model.kind || `string` : `string`\n    }\n\n    showTextarea() {\n        return this.type !== 'string' && this.type !== 'number'\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DocksComponent } from './docks.component';\nimport { SidebarComponent } from './sidebar.component';\nimport { RendererComponent } from './renderer.component';\nimport { TableRendererComponent } from './table-renderer.component';\nimport { JsonViewerComponent } from './json-viewer.component';\nimport { ViewerInputComponent } from './value-input.component'\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [\n    DocksComponent,\n    SidebarComponent,\n    RendererComponent,\n    TableRendererComponent,\n    JsonViewerComponent,\n    ViewerInputComponent\n  ],\n  exports: [DocksComponent]\n})\nexport class DocksModule { }\n"],"names":["Component","Input","NgModule","CommonModule","FormsModule"],"mappings":"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"}
